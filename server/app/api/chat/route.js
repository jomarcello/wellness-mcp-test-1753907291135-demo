(()=>{var e={};e.id=276,e.ids=[276],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9149:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>h,routeModule:()=>u,serverHooks:()=>g,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>m});var t={};s.r(t),s.d(t,{GET:()=>p,POST:()=>l});var o=s(6559),n=s(8088),i=s(7719),a=s(2190),c=s(1397);async function l(e){try{let r,{message:s,history:t,practiceId:o}=await e.json();if(!s)return a.NextResponse.json({error:"Message is required"},{status:400});let n=process.env.OPENAI_API_KEY;if(!n)return console.error("OPENAI_API_KEY not found in environment variables"),a.NextResponse.json({error:"API configuration error"},{status:500});let i=e.headers.get("referer")||"",l=e.headers.get("host")||"";console.log(`🔍 Chat API Request Details:`,{practiceId:o,referer:i,host:l,availablePractices:Object.keys(c.zI)}),o&&c.zI[o]?(r=c.zI[o],console.log(`✅ Using practiceId from client: ${o}`)):l.includes("spinealign-center")||l.includes(":3000")?(r=c.zI.spinealign,console.log(`✅ Using SpineAlign from host: ${l}`)):l.includes("smith-chiropractic")||l.includes(":3001")?(r=c.zI.smith,console.log(`✅ Using Smith from host: ${l}`)):i.includes("spinealign-center")||i.includes(":3000")?(r=c.zI.spinealign,console.log(`✅ Using SpineAlign from referer: ${i}`)):i.includes("smith-chiropractic")||i.includes(":3001")?(r=c.zI.smith,console.log(`✅ Using Smith from referer: ${i}`)):process.env.PRACTICE_ID&&c.zI[process.env.PRACTICE_ID]?(r=c.zI[process.env.PRACTICE_ID],console.log(`✅ Using practice from environment: ${process.env.PRACTICE_ID}`)):"3000"===process.env.PORT?(r=c.zI.spinealign,console.log(`✅ Using SpineAlign from PORT=3000`)):"3001"===process.env.PORT?(r=c.zI.smith,console.log(`✅ Using Smith from PORT=3001`)):(r=c.zI.smith,console.log(`⚠️ Using Smith as final fallback`)),console.log(`💬 Final chat configuration: ${r.name} (${r.id})`);let p=[{role:"system",content:r.chat.systemPrompt},...(t||[]).slice(-10).map(e=>({role:e.role,content:e.content})),{role:"user",content:s}],u=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({model:"gpt-4o-mini",messages:p,max_tokens:1e3,temperature:.7,stream:!1})});if(!u.ok){let e=await u.text();return console.error("OpenAI API error:",u.status,e),a.NextResponse.json({error:"Failed to get AI response"},{status:500})}let d=await u.json();if(!d.choices||!d.choices[0]||!d.choices[0].message)return console.error("Invalid response format from OpenAI API:",d),a.NextResponse.json({error:"Invalid response from AI service"},{status:500});let m=d.choices[0].message.content;return a.NextResponse.json({message:m,timestamp:new Date().toISOString(),practice:r.name,practiceId:r.id,doctor:r.doctor,debug:{detectedPractice:r.id,usedMethod:o?"clientPracticeId":l.includes("spinealign-center")||l.includes(":3000")||l.includes("smith-chiropractic")||l.includes(":3001")?"hostHeader":process.env.PRACTICE_ID?"environmentVar":process.env.PORT?"portDetection":"fallback",serverPort:process.env.PORT,serverPracticeId:process.env.PRACTICE_ID}})}catch(e){return console.error("Chat API error:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(){return a.NextResponse.json({error:"Method not allowed"},{status:405})}let u=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/chat/route",pathname:"/api/chat",filename:"route",bundlePath:"app/api/chat/route"},resolvedPagePath:"/Users/jovannitilborg/Downloads/Agentsdemo-main/clean-demo/src/app/api/chat/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:d,workUnitAsyncStorage:m,serverHooks:g}=u;function h(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:m})}},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[719,580,397],()=>s(9149));module.exports=t})();